-----------------------------------------------------------------
-----------------------------------------------------------------

ALWAYS FIRST:

-- git clone <link to repo>

-- git pull

Make your changes:

-- git add . 

(makes github track all new changes - in whatever editor you want)

-- git commit -m "<your message>"

(enter your changes into your local repository)

-- git push

(pushing your changes to remote AKA github servers)


SETTING UP YOUR DEV ENVIRONMENT: 

-- NOTE: React, Angular, Vue, and Node/Express JS (we are using express for the OPES server project) requires the Node JS runtime environment package

-- To start, open a global terminal window and type "node -v". If you get an error, the runtime is not installed; if it is installed then you will
see a version number

-- If node is NOT installed, go to this link: https://nodejs.org/en/ and download the appropriate installer. Restart your PC once everything is installed
onto your local system.

-- Finally, we need to check for the NPM package. Again, make sure a global terminal window is opened and type "npm -v". If you get a number, the package
is installed. If you don't get a version number, go to this link: https://www.npmjs.com/ and install NPM. Restart your PC once this process is completed.

-----------------------------------------------------------------
-----------------------------------------------------------------


CHANGING THE JSON IN THE OPES ADVENTURES SERVER:

-- clone the repo

-- make sure it is up to date by pulling

-- go to the "public" folder, which contains a file named "nodeJSON.js"

-- copy your new JSON structure to the right side of the equals sign on line 1. In programming, this is called a variable assignment, and you
are essentially just telling the programming language that you want to store this entire JSON structure as a constant named "nodeJSON".

-- since the import and export structure for the modules is already in place, all you have to do is save the changes to the file

-- add, commit, and push changes to server. Herkou will auto-integrate the changes on the web.


-----------------------------------------------------------------
-----------------------------------------------------------------

TESTING CHANGES TO THE JSON FILE:

-- open up a terminal at the top level of this project

-- type "npm start"

(the console will spit out a number, most likely 3001, that corresponds to the port your test server will run on

-- go to a web browser and type "http://localhost:<your port number>/info/json"

-- If you see an error in the console or a "cannot connect" or "error 404" in the web browser, your JSON file is being parsed incorrectly.

(this means you messed up curly braces, array brackets, ect.)

-- use an online JSON validator to test the body and make sure everything is correct and working